{"name":"mcserverstatus","tagline":"A javascript function for changes in a server's playerlist.","body":"# mcserverstatus\r\n\r\nA javascript function for checking changes in a minecraft server's list of players without using query or a custom plugin.\r\n\r\n## Usage\r\n\r\n### mcstatus(options,callback)\r\n\r\nOptions can be an object:\r\n```js\r\nvar options = {\r\n  name: 'name',\r\n  ip: 'ip'\r\n}\r\n```\r\nOr an array of objects:\r\n```js\r\nvar options = [\r\n  {\r\n    name: 'name1',\r\n    ip: 'ip1'\r\n  },\r\n  {\r\n    name: 'name2',\r\n    ip: 'ip2'\r\n  }\r\n]\r\n```\r\n\r\n#### Example:\r\n\r\n```js\r\nvar mcstatus = require('mcserverstatus').mcstatus; // only include if using npm\r\n\r\nmcstatus({\r\n  name: 'senious survival', // can be anything\r\n  ip: 'senious.mcph.co' // the IP of the server\r\n}, function response(response) {\r\n  console.log(response);\r\n});\r\n```\r\n\r\nIf used in an interval, it will return the current players only once and then return consecutive join and leave messages.\r\n```js\r\nsetInterval(function(){\r\n  mcstatus({\r\n    name: 'name',\r\n    ip: 'ip'\r\n  },function(response){\r\n    console.log(response);\r\n  });\r\n},1000);\r\n```\r\n#### Response:\r\nWhen first ran it returns:\r\n\r\n`Currently [list of players] are playing on [server name].`\r\n\r\nThen if a player joins the server and the function is run again:\r\n\r\n`[playername] joined [server name]. Now there are [current players]/[max players] on the server, including [list of players].`\r\n\r\n## Install\r\n\r\n### With npm:\r\n\r\n`npm install mcserverstatus`\r\n\r\n### Without npm:\r\n\r\n`<script src=\"`[https://rawgit.com/arcusdevteam/mcserverstatus/master/mcstatus.min.js](https://rawgit.com/arcusdevteam/mcserverstatus/master/mcstatus.min.js)`\"></script>`\r\n","google":"UA-62007855-2","note":"Don't delete this file! It's used internally to help with page regeneration."}